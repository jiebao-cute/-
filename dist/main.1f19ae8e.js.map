{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string2","n","step","setTimeout","innerHTML","substring","scrollTo","window","length"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAX;AACA,IAAIC,KAAK,GAAGF,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAZ,EACA;;AACA,IAAIE,MAAM,4hDAAV,EAuDA;;AACA,IAAIC,OAAO,GAAG,EAAd,EACA;;AACA,IAAIC,CAAC,GAAG,CAAR,EACA;;AAEE,IAAIC,IAAI,GAAG,SAAPA,IAAO,GAAK;AAChBC,EAAAA,UAAU,CAAC,YAAI;AACf;AACA;AACA,QAAGJ,MAAM,CAACE,CAAD,CAAN,KAAa,IAAhB,EAAqB;AACrB;AACAD,MAAAA,OAAO,GAAGA,OAAO,GAAG,MAApB,CAFqB,CAEM;AAC1B,KAHD,MAGM,IAAGD,MAAM,CAACE,CAAD,CAAN,KAAc,GAAjB,EAAqB;AAC3BD,MAAAA,OAAO,IAAI,QAAX,CAD2B,CACP;AACnB,KAFK,MAEC;AACL;AACFA,MAAAA,OAAO,GAAGA,OAAO,GAAED,MAAM,CAACE,CAAD,CAAzB;AAA8B;;AAC9BN,IAAAA,IAAI,CAACS,SAAL,GAAiBJ,OAAjB;AACAF,IAAAA,KAAK,CAACM,SAAN,GAAkBL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAmBJ,CAAnB,CAAlB,CAZe,CAY0B;;AACzCN,IAAAA,IAAI,CAACW,QAAL,CAAc,CAAd,EAAgB,MAAhB;AACAC,IAAAA,MAAM,CAACD,QAAP,CAAgB,CAAhB,EAAkB,KAAlB,EAde,CAcU;;AACzB,QAAKL,CAAC,GAAGF,MAAM,CAACS,MAAP,GAAc,CAAvB,EAAyB;AACrB;AACAP,MAAAA,CAAC,IAAI,CAAL;AACAC,MAAAA,IAAI;AACP,KAJD,MAIK,CACD;AACH;AACA,GAtBS,EAsBR,GAtBQ,CAAV;AAuBD,CAxBC;;AAyBFA,IAAI","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["let html = document.querySelector('#html');\r\nlet style = document.querySelector(\"#style\");\r\n//文字加注释，不然会影响下面的代码\r\nlet string = `\r\n/*hello，我叫廖玉洁\r\n-接下来我演示下我的前端功底\r\n-首先我要准备一个div\r\n*/\r\n#div1{\r\n   \r\n   width: 200px;\r\n   height: 200px;\r\n}\r\n/*接下来我要把div变成一个太极八卦图\r\n-请欣赏\r\n-首先，将div变成一个圆\r\n*/\r\n#div1{\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 3px rgba(0,0,0,0.5);\r\n    border: none;\r\n}\r\n/*\r\n-八卦是阴阳相结合\r\n-一黑一白\r\n*/\r\n#div1{\r\nbackground: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/*\r\n-八卦由阴阳两极调和而成\r\n-逐渐形成八卦图\r\n*/\r\n#div1::before{\r\n   width:100px;\r\n   height:100px;\r\n   border:1px solid red;\r\n   top: 0;\r\n   left: 50%;\r\n   transform: translateX(-50%);\r\n   background: #000;\r\n   border-radius: 50%;\r\n   border:none;\r\n   background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\r\n}\r\n#div1::after{\r\n    width:100px;\r\n    height:100px;\r\n    border:1px solid red;\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background: #fff;\r\n    border-radius: 50%;\r\n    border:none;\r\n    background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%, rgba(0,0,0,1) 100%);\r\n }\r\n`;\r\n//string = string.replace(/\\n/g,\"<br>\");//将页面显示的空格全部变成换行\r\nlet string2 = \"\";\r\n//console.log(string.length);\r\nlet n = 0; \r\n//demo.innerHTML = string.substring(0,n);//这句话去掉，n就不会从0开始，上面的n就需要改成-1\r\n\r\n  let step = () =>{\r\n  setTimeout(()=>{\r\n  //简化版本，如果是回车，就是br，如果不是就是strin[n]\r\n  //string2 += string[n] === \"\\n\"?\"<br>\":string[n];\r\n  if(string[n]=== '\\n'){\r\n  //如果是回车，就不照搬\r\n  string2 = string2 + '<br>';//html里面回车表示<br>\r\n  }else if(string[n] === \" \"){\r\n  string2 += \"&nbsp;\";//html里面空格表示&nbsp\r\n  } else {\r\n    //如果不是回车，就照搬\r\n  string2 = string2 +string[n];}\r\n  html.innerHTML = string2;\r\n  style.innerHTML = string.substring(0,n); //直接写string2会导致里面出现空格等html里面的标签\r\n  html.scrollTo(0,999999);\r\n  window.scrollTo(0,99999);//滚动条自动滚动到99999\r\n  if ( n < string.length-1){\r\n      //不是最后一个就继续\r\n      n += 1;\r\n      step();\r\n  }else{\r\n      //n是最后一个，就结束\r\n  }\r\n  },100);\r\n};\r\nstep();\r\n\r\n"]}